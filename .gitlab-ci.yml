  image: gradle:5.6-jdk12

stages:
  - build
  - validate
  - test

variables:
  # Disable the Gradle daemon to ensure isolated runs of the CI pipeline.
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script:
    gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build/
      - .gradle/

checkStyle:
  stage: validate
  script: gradle checkstyleMain checkstyleTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/

spotBugs:
  stage: validate
  script: gradle spotbugsMain spotbugsTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/

PMD:
  stage: validate
  script: gradle pmdMain pmdTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/

test:
  stage: test
  script:
    gradle check

report:
  stage: test
  script:
    - gradle test
  artifacts:
    reports:
      junit: build/test-results/test/**/TEST-*.xml

coverage:
  stage: test
  script:
    - gradle test
    - gradle jacocoTestReport
    - gradle jacocoTestCoverageVerification
    - cat build/reports/jacoco/test/html/index.html
  coverage: '/Total.*?ctr2.*?ctr2">([0-9]{1,3})%/'
  artifacts:
    name: test_coverage
    paths:
      - build/reports/jacoco/test/html

pitest:
  stage: test
  script:
    - gradle pitest
  artifacts:
    name: pitest_analysis
    paths:
      - build/reports/pitest/html

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  artifacts:
    paths: [gl-code-quality-report.json]
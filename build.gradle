import com.github.spotbugs.SpotBugsTask

plugins {
    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)

    // For using JavaFX
    id 'org.openjfx.javafxplugin' version '0.0.8'
    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"

    // JavaFX
    id 'application'
}

mainClassName = 'pacman.Main'

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
        includes = ['nl.tudelft.cse.sem.*']
        excludes = []
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile 'org.jetbrains:annotations:13.0'
}

javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.cse.sem.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

checkstyle {
    toolVersion "8.25"
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}


spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

sourceSets.main {
    java {
        srcDir 'src/main/java'
    }
    resources {
        srcDirs = ['src/main/java', 'src/main/resources']
        exclude "**/*.java"
    }
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

javafx {
    version = "12.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
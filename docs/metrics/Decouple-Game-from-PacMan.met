<?xml version="1.0" ?>
<SNAPSHOT profile="Complexity metrics" timestamp="zo, 19 jan. 2020 22:26:25 CET" version="1.8">
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.CyclomaticComplexityMetric">
    <VALUE measured="pacman.logic.level.Square.removeEntity(Entity)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.setEaten()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest.chaseTargetTest(Direction)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.end_animations(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.levelWon()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.gameFinished(GameState)" value="6.0"/>
    <VALUE measured="pacman.logic.level.Board.addEntity(Entity)" value="4.0"/>
    <VALUE measured="pacman.database.LeaderboardDaoTest.testGetTop()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.removeDeadEntities()" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite.draw(PacMan,GraphicsContext,Style,double)" value="5.0"/>
    <VALUE measured="pacman.logic.entity.Wall.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pinky.Pinky(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.updateDirection()" value="4.0"/>
    <VALUE measured="pacman.logic.Direction.getRotation()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getInstance()" value="3.0"/>
    <VALUE measured="pacman.graphics.GameView.getStatsCanvas()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStopWorkingOk()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUserIdFromDatabase(User)" value="3.0"/>
    <VALUE measured="pacman.logic.Player.getUsername()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.PinkySprite()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.LevelFactory()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.loadGameScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPelletColour()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Blinky.chaseTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.createDialogueWindow(String,String,boolean)" value="3.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.start()" value="1.0"/>
    <VALUE measured="pacman.database.User.getId()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testFromCoords(int,int,Direction)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.setGameView(GameView)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.PacMan(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.isImmune()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController.registerUser(ActionEvent)" value="3.0"/>
    <VALUE measured="pacman.graphics.Style.Style(String,String,String,String,String,String,String,String,String,String,String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPosX(double)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setNextDirection(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.isAlive()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.draw(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getInverse()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testDistanceX()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStartAndClose()" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testWrongCoords(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDx()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.deleteUser(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController.splash(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.draw()" value="5.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testOneInstance()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.getBoard()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getTextColour()" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testGetSetScore()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest.setUp()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.Entity(Board,Square,Sprite&lt;? extends Entity&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.checkCollision()" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquare(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getNeighbour(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.removeEntity()" value="3.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.closestNeighbor()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.wasPacManHit()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.pause()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setAlive(boolean)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.noTarget()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.updatePacmanAlive()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest.chaseTargetTestWithoutPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Mode.invertScatter()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testCollideWall()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.goToMenu(ActionEvent,User)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testGameWon()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.isRunning()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.update(double)" value="3.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetPassword()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getState()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.GameController()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getEntities()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.MapParser(String)" value="4.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.setPumped(boolean)" value="2.0"/>
    <VALUE measured="pacman.logic.game.GameController.getUser()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testCreateController()" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testInverse(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Blinky.Blinky(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.addEntity(Entity)" value="3.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.frightenedTarget(List&lt;Square&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.computeScore()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setX(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.setBoard(Board)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDy()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testEqualsSame()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest.testUserExists()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.prepareTimer()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testUnpauseWorkingOk()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.advanceLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testNoCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.Game(Player,List&lt;Level&gt;)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.getGameView()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.testLoss()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testImmunity()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PelletSprite.draw(Pellet,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.isWithinBound(double,double)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.spawnTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.draw(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testNotEquals()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getNeighbours()" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.isPumped()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.addUser(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.Style.getPumpedColour()" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseSquare(Board,char,int,int)" value="9.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setState(GameState)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testChangeDirection()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.Sprite.drawBackground(E,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.WallTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDirection(int,int)" value="4.0"/>
    <VALUE measured="pacman.logic.level.Level.Level(Board,PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getEntities()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserScore(User)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testSwitchScatterChaseModes()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.startTimer()" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.removeEntity(Entity)" value="4.0"/>
    <VALUE measured="pacman.logic.level.Square.directionOf(Square)" value="9.0"/>
    <VALUE measured="pacman.logic.level.MapParser.checkMapCorrectness(List&lt;String&gt;)" value="6.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.loadMenuScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.updatePosition(double,double)" value="3.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.getDrawStyle()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite2.testPacManEatsGhosts()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.getOptionsWithWalls()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.loseLife()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.init()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.removeDeadEntities()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.start()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.testCreateLevelSuccess()" value="1.0"/>
    <VALUE measured="pacman.database.User.getPassword()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testUnpauseNotStarted()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.distanceY(double)" value="2.0"/>
    <VALUE measured="pacman.database.UserDao.retrieveScore(User)" value="3.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.testUpdate()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.init()" value="4.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.scatterTarget(List&lt;Square&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getDirection()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testNextLevel()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUserPasswordFromDatabase(User)" value="3.0"/>
    <VALUE measured="pacman.logic.level.Board.getPellets()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.unpause()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.init()" value="2.0"/>
    <VALUE measured="pacman.database.LeaderboardDaoTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getEntities()" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.MovingEntity(Board,Square,Sprite&lt;? extends Entity&gt;)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPowerPelletColor()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.stopGame()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.isScared()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.loadRegisterScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.database.User.getScore()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPinkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.reset()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getGame()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.LevelFactory(String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addTickScore(int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getHeight()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserPassword(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.draw(double)" value="4.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStopException()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.getOptionsNoWalls()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPosY(double)" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.BlinkySprite()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.setImmunity()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.RegisterDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetUsername()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getOptions()" value="7.0"/>
    <VALUE measured="pacman.logic.entity.Entity.collide(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.revivePlayer()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.LeaderboardDao()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite.animation(GraphicsContext,Style,boolean)" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.setImages(Image,Image,Image)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.Square(Board,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.distanceX(double)" value="2.0"/>
    <VALUE measured="pacman.database.User.setId(int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getBlinkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getLevel()" value="1.0"/>
    <VALUE measured="pacman.database.User.setUsername(String)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.setScared(boolean)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getHomeX()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pinky.chaseTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.Style.getInkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.setState(GameState)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUsernameFromDatabase(User)" value="3.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.StatsCanvas(Game,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.ghostDoesntMove()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.setProfileDetails(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testScatterBehavior()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PowerPelletSprite.draw(PowerPellet,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMap(Scanner)" value="5.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getWidth()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getSprite()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.WallTest.createWall()" value="3.0"/>
    <VALUE measured="pacman.logic.entity.Wall.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.checkCollision()" value="7.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.checkLevelWon()" value="5.0"/>
    <VALUE measured="pacman.logic.level.Square.hasSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getBackgroundColor()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.update(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.WallSprite.draw(Wall,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.setPlayer(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.drawHome(Ghost,GraphicsContext,Color,Color)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.updateScore(int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.newLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.moveToSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.database.DbConnect.getMyConnection()" value="2.0"/>
    <VALUE measured="pacman.database.RegisterDao.RegisterDao()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.update(double)" value="5.0"/>
    <VALUE measured="pacman.graphics.GameView.getBoardCanvas()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.updatePacmanDies()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest.createPellet()" value="3.0"/>
    <VALUE measured="pacman.logic.level.Board.Board(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getHomeY()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.enterScore(User,int)" value="2.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController.display(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.database.User.getUsername()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.chooseTarget(List&lt;Square&gt;)" value="6.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.isEaten()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testFrightenedBehavior()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.UserDao()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getYs()" value="1.0"/>
    <VALUE measured="pacman.Main.main(String[])" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.hasLives()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.PowerPellet(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.resetTickScore()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.closestNeighbour(Square,List&lt;Square&gt;)" value="4.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setDirection(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Ghost(Board,Square,Sprite&lt;? extends Ghost&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest.chaseTargetTestWithoutPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.won()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getBoard()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.drawBackground(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getScore()" value="1.0"/>
    <VALUE measured="pacman.database.User.setPassword(String)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest.createPowerPellet()" value="3.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.nextLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.Pellet(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.database.LoginDao.attemptLogin(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.drawImage(Ghost,GraphicsContext)" value="3.0"/>
    <VALUE measured="pacman.database.UserDao.UserDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetId()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testUpdate()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testEqualsDiff()" value="1.0"/>
    <VALUE measured="pacman.Main.start(Stage)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMap(String)" value="2.0"/>
    <VALUE measured="pacman.logic.game.GameController.setTimer(AnimationTimer)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LeaderboardController.initialize(URL,ResourceBundle)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.collideWithPacMan(PacMan)" value="4.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getX()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setGame(Game)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.hashCode()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.setUsername(String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquare(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testEatenBehavior()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.setDrawStyle(Style)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.noOptions()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.createLevel(Board)" value="4.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquares()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.getTop(int)" value="3.0"/>
    <VALUE measured="pacman.logic.game.Game.getPlayer()" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMapFromString(String)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.startGame(ActionEvent)" value="9.0"/>
    <VALUE measured="pacman.logic.game.Game.checkWinLoss()" value="5.0"/>
    <VALUE measured="pacman.database.User.setScore(int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getWallColour()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.closestNeighborThrowsException()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setUser(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setLives(int)" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.changeMaxLvl(int)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.Direction(int,int,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testExists()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.update(double)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setY(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.updateTimers(double)" value="4.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.update(double)" value="2.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.LeaderboardDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.getPacMan()" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView.GameView(Game,int,int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getClydeColour()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.init()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.drawBackground(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.BoardCanvas(Board,int,int)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getXs()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.equals(Object)" value="7.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testGetSetUsername()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPacmanColour()" value="1.0"/>
    <VALUE measured="pacman.database.User.equals(Object)" value="7.0"/>
    <VALUE measured="pacman.logic.level.Square.moveEntity(Entity,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.toString()" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setScore(int)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserUsername(User)" value="2.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest.chaseTargetTest(Direction,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.update(double)" value="9.0"/>
    <VALUE measured="pacman.logic.level.Board.getGhosts()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getY()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.clear()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testPauseNotStarted()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.checkUserAlreadyExists(User)" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testCollidePellet()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getLives()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getSquares()" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetScore()" value="1.0"/>
    <VALUE measured="pacman.database.User.hashCode()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.eatsBigPellet()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest.setUp()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testDistanceXWrap()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getTickScore()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.testNoPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.stop()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Wall.Wall(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.createLevel(String)" value="1.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.DesignComplexityMetric">
    <VALUE measured="pacman.logic.level.Square.removeEntity(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.setEaten()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest.chaseTargetTest(Direction)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.end_animations(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.levelWon()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.gameFinished(GameState)" value="6.0"/>
    <VALUE measured="pacman.logic.level.Board.addEntity(Entity)" value="4.0"/>
    <VALUE measured="pacman.database.LeaderboardDaoTest.testGetTop()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.removeDeadEntities()" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite.draw(PacMan,GraphicsContext,Style,double)" value="5.0"/>
    <VALUE measured="pacman.logic.entity.Wall.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pinky.Pinky(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.updateDirection()" value="3.0"/>
    <VALUE measured="pacman.logic.Direction.getRotation()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getInstance()" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView.getStatsCanvas()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStopWorkingOk()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUserIdFromDatabase(User)" value="3.0"/>
    <VALUE measured="pacman.logic.Player.getUsername()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.PinkySprite()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.LevelFactory()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.loadGameScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPelletColour()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Blinky.chaseTarget()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.createDialogueWindow(String,String,boolean)" value="3.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.start()" value="1.0"/>
    <VALUE measured="pacman.database.User.getId()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testFromCoords(int,int,Direction)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.setGameView(GameView)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.PacMan(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.isImmune()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController.registerUser(ActionEvent)" value="3.0"/>
    <VALUE measured="pacman.graphics.Style.Style(String,String,String,String,String,String,String,String,String,String,String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPosX(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setNextDirection(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.isAlive()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.draw(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getInverse()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testDistanceX()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStartAndClose()" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testWrongCoords(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDx()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.deleteUser(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController.splash(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.draw()" value="3.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testOneInstance()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.getBoard()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getTextColour()" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testGetSetScore()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest.setUp()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.Entity(Board,Square,Sprite&lt;? extends Entity&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.checkCollision()" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquare(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getNeighbour(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.removeEntity()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.closestNeighbor()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.wasPacManHit()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.pause()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setAlive(boolean)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.noTarget()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.updatePacmanAlive()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest.chaseTargetTestWithoutPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Mode.invertScatter()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testCollideWall()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.goToMenu(ActionEvent,User)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testGameWon()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.isRunning()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.update(double)" value="2.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetPassword()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getState()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.GameController()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getEntities()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.MapParser(String)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.setPumped(boolean)" value="2.0"/>
    <VALUE measured="pacman.logic.game.GameController.getUser()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testCreateController()" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testInverse(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Blinky.Blinky(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.addEntity(Entity)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.frightenedTarget(List&lt;Square&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.computeScore()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setX(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.setBoard(Board)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDy()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testEqualsSame()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest.testUserExists()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.prepareTimer()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testUnpauseWorkingOk()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.advanceLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testNoCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.Game(Player,List&lt;Level&gt;)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.getGameView()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.testLoss()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testImmunity()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PelletSprite.draw(Pellet,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.spawnTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.draw(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testNotEquals()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getNeighbours()" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.isPumped()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.addUser(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.Style.getPumpedColour()" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseSquare(Board,char,int,int)" value="2.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setState(GameState)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testChangeDirection()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.Sprite.drawBackground(E,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.WallTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDirection(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.Level(Board,PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getEntities()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserScore(User)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testSwitchScatterChaseModes()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.startTimer()" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.removeEntity(Entity)" value="4.0"/>
    <VALUE measured="pacman.logic.level.Square.directionOf(Square)" value="9.0"/>
    <VALUE measured="pacman.logic.level.MapParser.checkMapCorrectness(List&lt;String&gt;)" value="3.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.loadMenuScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.updatePosition(double,double)" value="3.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.getDrawStyle()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite2.testPacManEatsGhosts()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.getOptionsWithWalls()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.loseLife()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.init()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.removeDeadEntities()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.start()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.testCreateLevelSuccess()" value="1.0"/>
    <VALUE measured="pacman.database.User.getPassword()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testUnpauseNotStarted()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.distanceY(double)" value="2.0"/>
    <VALUE measured="pacman.database.UserDao.retrieveScore(User)" value="3.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.testUpdate()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.scatterTarget(List&lt;Square&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getDirection()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testNextLevel()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUserPasswordFromDatabase(User)" value="3.0"/>
    <VALUE measured="pacman.logic.level.Board.getPellets()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.unpause()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.init()" value="2.0"/>
    <VALUE measured="pacman.database.LeaderboardDaoTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getEntities()" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.MovingEntity(Board,Square,Sprite&lt;? extends Entity&gt;)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPowerPelletColor()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.stopGame()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.isScared()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.loadRegisterScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.database.User.getScore()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPinkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.reset()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getGame()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.LevelFactory(String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addTickScore(int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getHeight()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserPassword(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.draw(double)" value="3.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStopException()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.getOptionsNoWalls()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPosY(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.BlinkySprite()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.setImmunity()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.RegisterDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetUsername()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getOptions()" value="7.0"/>
    <VALUE measured="pacman.logic.entity.Entity.collide(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.revivePlayer()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.LeaderboardDao()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite.animation(GraphicsContext,Style,boolean)" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.setImages(Image,Image,Image)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.Square(Board,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.distanceX(double)" value="2.0"/>
    <VALUE measured="pacman.database.User.setId(int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getBlinkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getLevel()" value="1.0"/>
    <VALUE measured="pacman.database.User.setUsername(String)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.setScared(boolean)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getHomeX()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pinky.chaseTarget()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getInkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.setState(GameState)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUsernameFromDatabase(User)" value="3.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.StatsCanvas(Game,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.ghostDoesntMove()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.setProfileDetails(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testScatterBehavior()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PowerPelletSprite.draw(PowerPellet,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMap(Scanner)" value="5.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getWidth()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getSprite()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.WallTest.createWall()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.checkCollision()" value="7.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.checkLevelWon()" value="5.0"/>
    <VALUE measured="pacman.logic.level.Square.hasSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getBackgroundColor()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.update(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.WallSprite.draw(Wall,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.setPlayer(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.drawHome(Ghost,GraphicsContext,Color,Color)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.updateScore(int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.newLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.moveToSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.database.DbConnect.getMyConnection()" value="2.0"/>
    <VALUE measured="pacman.database.RegisterDao.RegisterDao()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.update(double)" value="5.0"/>
    <VALUE measured="pacman.graphics.GameView.getBoardCanvas()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.updatePacmanDies()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest.createPellet()" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.Board(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getHomeY()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.enterScore(User,int)" value="2.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController.display(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.database.User.getUsername()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.chooseTarget(List&lt;Square&gt;)" value="6.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.isEaten()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testFrightenedBehavior()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.UserDao()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getYs()" value="1.0"/>
    <VALUE measured="pacman.Main.main(String[])" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.hasLives()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.PowerPellet(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.resetTickScore()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.closestNeighbour(Square,List&lt;Square&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setDirection(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Ghost(Board,Square,Sprite&lt;? extends Ghost&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest.chaseTargetTestWithoutPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.won()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getBoard()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.drawBackground(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getScore()" value="1.0"/>
    <VALUE measured="pacman.database.User.setPassword(String)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest.createPowerPellet()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.nextLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.Pellet(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.database.LoginDao.attemptLogin(User)" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.drawImage(Ghost,GraphicsContext)" value="3.0"/>
    <VALUE measured="pacman.database.UserDao.UserDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetId()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testUpdate()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testEqualsDiff()" value="1.0"/>
    <VALUE measured="pacman.Main.start(Stage)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMap(String)" value="2.0"/>
    <VALUE measured="pacman.logic.game.GameController.setTimer(AnimationTimer)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LeaderboardController.initialize(URL,ResourceBundle)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.collideWithPacMan(PacMan)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getX()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setGame(Game)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.hashCode()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.setUsername(String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquare(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testEatenBehavior()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.setDrawStyle(Style)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.noOptions()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.createLevel(Board)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquares()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.getTop(int)" value="3.0"/>
    <VALUE measured="pacman.logic.game.Game.getPlayer()" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMapFromString(String)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.startGame(ActionEvent)" value="4.0"/>
    <VALUE measured="pacman.logic.game.Game.checkWinLoss()" value="5.0"/>
    <VALUE measured="pacman.database.User.setScore(int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getWallColour()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.closestNeighborThrowsException()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setUser(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setLives(int)" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.changeMaxLvl(int)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.Direction(int,int,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testExists()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setY(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.updateTimers(double)" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.update(double)" value="2.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.LeaderboardDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.getPacMan()" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView.GameView(Game,int,int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getClydeColour()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.init()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.drawBackground(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.BoardCanvas(Board,int,int)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getXs()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.equals(Object)" value="5.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testGetSetUsername()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPacmanColour()" value="1.0"/>
    <VALUE measured="pacman.database.User.equals(Object)" value="5.0"/>
    <VALUE measured="pacman.logic.level.Square.moveEntity(Entity,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.toString()" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setScore(int)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserUsername(User)" value="2.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest.chaseTargetTest(Direction,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.update(double)" value="6.0"/>
    <VALUE measured="pacman.logic.level.Board.getGhosts()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getY()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.clear()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testPauseNotStarted()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.checkUserAlreadyExists(User)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testCollidePellet()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getLives()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getSquares()" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetScore()" value="1.0"/>
    <VALUE measured="pacman.database.User.hashCode()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.eatsBigPellet()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest.setUp()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testDistanceXWrap()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getTickScore()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.testNoPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.stop()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.Wall(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.createLevel(String)" value="1.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.EssentialCyclomaticComplexityMetric">
    <VALUE measured="pacman.logic.level.Square.removeEntity(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.setEaten()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest.chaseTargetTest(Direction)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.end_animations(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.levelWon()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.gameFinished(GameState)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addEntity(Entity)" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDaoTest.testGetTop()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.removeDeadEntities()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite.draw(PacMan,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pinky.Pinky(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.updateDirection()" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getRotation()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getInstance()" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView.getStatsCanvas()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStopWorkingOk()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUserIdFromDatabase(User)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getUsername()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.PinkySprite()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.LevelFactory()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.loadGameScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPelletColour()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Blinky.chaseTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.createDialogueWindow(String,String,boolean)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.start()" value="1.0"/>
    <VALUE measured="pacman.database.User.getId()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testFromCoords(int,int,Direction)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.setGameView(GameView)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.PacMan(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.isImmune()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController.registerUser(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.Style(String,String,String,String,String,String,String,String,String,String,String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPosX(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setNextDirection(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.isAlive()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.draw(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getInverse()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testDistanceX()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStartAndClose()" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testWrongCoords(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDx()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.deleteUser(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController.splash(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.draw()" value="2.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testOneInstance()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.getBoard()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getTextColour()" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testGetSetScore()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest.setUp()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.Entity(Board,Square,Sprite&lt;? extends Entity&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.checkCollision()" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquare(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getNeighbour(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.removeEntity()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.closestNeighbor()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.wasPacManHit()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.pause()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setAlive(boolean)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.noTarget()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.updatePacmanAlive()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest.chaseTargetTestWithoutPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Mode.invertScatter()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testCollideWall()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.goToMenu(ActionEvent,User)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testGameWon()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.isRunning()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.update(double)" value="2.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetPassword()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getState()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.GameController()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getEntities()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.MapParser(String)" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.setPumped(boolean)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getUser()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testCreateController()" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest.testInverse(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Blinky.Blinky(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.addEntity(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.frightenedTarget(List&lt;Square&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.computeScore()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setX(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.setBoard(Board)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDy()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testEqualsSame()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest.testUserExists()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.prepareTimer()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testUnpauseWorkingOk()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.advanceLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testNoCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.Game(Player,List&lt;Level&gt;)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.getGameView()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.testLoss()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testImmunity()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PelletSprite.draw(Pellet,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.spawnTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.draw(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testNotEquals()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getNeighbours()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.isPumped()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.addUser(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPumpedColour()" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseSquare(Board,char,int,int)" value="2.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setState(GameState)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testChangeDirection()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.Sprite.drawBackground(E,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.WallTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.getDirection(int,int)" value="3.0"/>
    <VALUE measured="pacman.logic.level.Level.Level(Board,PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getEntities()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserScore(User)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testSwitchScatterChaseModes()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.startTimer()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.removeEntity(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.directionOf(Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.checkMapCorrectness(List&lt;String&gt;)" value="5.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.loadMenuScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.updatePosition(double,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.getDrawStyle()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite2.testPacManEatsGhosts()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.getOptionsWithWalls()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.loseLife()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.init()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.removeDeadEntities()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.start()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.testCreateLevelSuccess()" value="1.0"/>
    <VALUE measured="pacman.database.User.getPassword()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testUnpauseNotStarted()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.distanceY(double)" value="2.0"/>
    <VALUE measured="pacman.database.UserDao.retrieveScore(User)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.testUpdate()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.scatterTarget(List&lt;Square&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getDirection()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testNextLevel()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUserPasswordFromDatabase(User)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPellets()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.unpause()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.init()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDaoTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getEntities()" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.MovingEntity(Board,Square,Sprite&lt;? extends Entity&gt;)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPowerPelletColor()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.stopGame()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.isScared()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.loadRegisterScreen(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.database.User.getScore()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPinkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.reset()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.getGame()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.LevelFactory(String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addTickScore(int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getHeight()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserPassword(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.draw(double)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testStopException()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.getOptionsNoWalls()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getPosY(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.BlinkySprite()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.setImmunity()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.RegisterDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetUsername()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getOptions()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.collide(Entity)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.revivePlayer()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.LeaderboardDao()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite.animation(GraphicsContext,Style,boolean)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.setImages(Image,Image,Image)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.Square(Board,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.distanceX(double)" value="2.0"/>
    <VALUE measured="pacman.database.User.setId(int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getBlinkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getLevel()" value="1.0"/>
    <VALUE measured="pacman.database.User.setUsername(String)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.setScared(boolean)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getHomeX()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pinky.chaseTarget()" value="2.0"/>
    <VALUE measured="pacman.graphics.Style.getInkyColour()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.setState(GameState)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.getUsernameFromDatabase(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.StatsCanvas(Game,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.ghostDoesntMove()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.setProfileDetails(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testScatterBehavior()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PowerPelletSprite.draw(PowerPellet,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMap(Scanner)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getWidth()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getSprite()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.WallTest.createWall()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.collideWithPacMan(PacMan)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.checkCollision()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.checkLevelWon()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.hasSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getBackgroundColor()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.update(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.WallSprite.draw(Wall,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.setPlayer(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.drawHome(Ghost,GraphicsContext,Color,Color)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.updateScore(int)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.addSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.logic.Player.newLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.moveToSquare(Square)" value="1.0"/>
    <VALUE measured="pacman.database.DbConnect.getMyConnection()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.RegisterDao()" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.update(double)" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView.getBoardCanvas()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.updatePacmanDies()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest.createPellet()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.Board(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.getHomeY()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.enterScore(User,int)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController.display(ActionEvent)" value="1.0"/>
    <VALUE measured="pacman.database.User.getUsername()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.chooseTarget(List&lt;Square&gt;)" value="6.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.isEaten()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testFrightenedBehavior()" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.UserDao()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getYs()" value="1.0"/>
    <VALUE measured="pacman.Main.main(String[])" value="1.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.hasLives()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.PowerPellet(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.resetTickScore()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.closestNeighbour(Square,List&lt;Square&gt;)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setDirection(Direction)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Ghost(Board,Square,Sprite&lt;? extends Ghost&gt;)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest.chaseTargetTestWithoutPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.won()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getBoard()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite.drawBackground(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getScore()" value="1.0"/>
    <VALUE measured="pacman.database.User.setPassword(String)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest.createPowerPellet()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.nextLevel()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.Pellet(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.database.LoginDao.attemptLogin(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite.drawImage(Ghost,GraphicsContext)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.UserDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetId()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testUpdate()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.testEqualsDiff()" value="1.0"/>
    <VALUE measured="pacman.Main.start(Stage)" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMap(String)" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setTimer(AnimationTimer)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LeaderboardController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getSquare()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.collideWithPacMan(PacMan)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getX()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setGame(Game)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.hashCode()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.setUsername(String)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquare(int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.testEatenBehavior()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.setDrawStyle(Style)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.noOptions()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.createLevel(Board)" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board.getSquares()" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.getTop(int)" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.getPlayer()" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser.parseMapFromString(String)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController.startGame(ActionEvent)" value="2.0"/>
    <VALUE measured="pacman.logic.game.Game.checkWinLoss()" value="3.0"/>
    <VALUE measured="pacman.database.User.setScore(int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getWallColour()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest.closestNeighborThrowsException()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.setUser(User)" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setLives(int)" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game.changeMaxLvl(int)" value="1.0"/>
    <VALUE measured="pacman.logic.Direction.Direction(int,int,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testExists()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.setY(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.updateTimers(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacMan.update(double)" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao.LeaderboardDao(DbConnect)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Level.getPacMan()" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView.GameView(Game,int,int)" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getClydeColour()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.init()" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite.drawBackground(Ghost,GraphicsContext,Style,double)" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.BoardCanvas(Board,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.getXs()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Wall.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet.isWithinBound(double,double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.equals(Object)" value="3.0"/>
    <VALUE measured="pacman.logic.PlayerTest.testGetSetUsername()" value="1.0"/>
    <VALUE measured="pacman.graphics.Style.getPacmanColour()" value="1.0"/>
    <VALUE measured="pacman.database.User.equals(Object)" value="3.0"/>
    <VALUE measured="pacman.logic.level.Square.moveEntity(Entity,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square.toString()" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas.setScore(int)" value="1.0"/>
    <VALUE measured="pacman.database.UserDao.updateUserUsername(User)" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.init()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest.chaseTargetTest(Direction,int,int)" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.update(double)" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getGhosts()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Entity.getY()" value="1.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas.clear()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest.testPauseNotStarted()" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao.checkUserAlreadyExists(User)" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest.testCollidePellet()" value="1.0"/>
    <VALUE measured="pacman.database.UserTest.setup()" value="1.0"/>
    <VALUE measured="pacman.logic.Player.getLives()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Pellet.isSolid()" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest.getSquares()" value="1.0"/>
    <VALUE measured="pacman.database.UserDaoTest.testGetScore()" value="1.0"/>
    <VALUE measured="pacman.database.User.hashCode()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1.eatsBigPellet()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest.setUp()" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest.testDistanceXWrap()" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board.getTickScore()" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest.testNoPacMan()" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController.stop()" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Wall.Wall(Board,Square)" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory.createLevel(String)" value="1.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.classMetrics.WeightedMethodComplexityMetric">
    <VALUE measured="pacman.database.LeaderboardDaoTest" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet" value="5.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest" value="3.0"/>
    <VALUE measured="pacman.logic.DirectionTest" value="3.0"/>
    <VALUE measured="pacman.logic.level.MapParser" value="24.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController" value="4.0"/>
    <VALUE measured="pacman.logic.level.Square" value="25.0"/>
    <VALUE measured="pacman.logic.PlayerTest" value="4.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas" value="9.0"/>
    <VALUE measured="pacman.database.UserDaoTest" value="5.0"/>
    <VALUE measured="pacman.graphics.sprite.Sprite" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Mode" value="2.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest" value="13.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite" value="3.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Ghost" value="35.0"/>
    <VALUE measured="pacman.graphics.BoardCanvas" value="13.0"/>
    <VALUE measured="pacman.logic.entity.MovingEntity" value="12.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest" value="2.0"/>
    <VALUE measured="pacman.database.RegisterDao" value="5.0"/>
    <VALUE measured="pacman.logic.entity.PelletTest" value="4.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory" value="7.0"/>
    <VALUE measured="pacman.logic.level.Level" value="6.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite2" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest" value="11.0"/>
    <VALUE measured="pacman.graphics.sprite.PelletSprite" value="1.0"/>
    <VALUE measured="pacman.Main" value="2.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite" value="5.0"/>
    <VALUE measured="pacman.graphics.sprite.PowerPelletSprite" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController" value="2.0"/>
    <VALUE measured="pacman.graphics.GameView" value="3.0"/>
    <VALUE measured="pacman.logic.level.BoardTest" value="12.0"/>
    <VALUE measured="pacman.database.LoginDao" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1" value="5.0"/>
    <VALUE measured="pacman.database.DbConnect" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest" value="8.0"/>
    <VALUE measured="pacman.logic.entity.Blinky" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest" value="4.0"/>
    <VALUE measured="pacman.logic.entity.Pinky" value="3.0"/>
    <VALUE measured="pacman.logic.entity.PinkyTest" value="2.0"/>
    <VALUE measured="pacman.database.LeaderboardDao" value="5.0"/>
    <VALUE measured="pacman.logic.entity.WallTest" value="4.0"/>
    <VALUE measured="pacman.logic.entity.PacMan" value="15.0"/>
    <VALUE measured="pacman.logic.entity.Pellet" value="5.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController" value="4.0"/>
    <VALUE measured="pacman.graphics.Style" value="12.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController" value="18.0"/>
    <VALUE measured="pacman.graphics.gui.LeaderboardController" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity" value="27.0"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite" value="7.0"/>
    <VALUE measured="pacman.database.UserTest" value="4.0"/>
    <VALUE measured="pacman.database.UserDao" value="14.0"/>
    <VALUE measured="pacman.logic.Player" value="8.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest" value="8.0"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite" value="3.0"/>
    <VALUE measured="pacman.logic.game.GameTest" value="0.0"/>
    <VALUE measured="pacman.logic.game.GameController" value="22.0"/>
    <VALUE measured="pacman.logic.entity.Wall" value="5.0"/>
    <VALUE measured="pacman.logic.game.Game" value="18.0"/>
    <VALUE measured="pacman.database.User" value="12.0"/>
    <VALUE measured="pacman.database.RegisterDaoTest" value="2.0"/>
    <VALUE measured="pacman.logic.level.Board" value="26.0"/>
    <VALUE measured="pacman.graphics.sprite.WallSprite" value="1.0"/>
    <VALUE measured="pacman.logic.Direction" value="8.0"/>
    <VALUE measured="pacman.logic.game.GameState" value="0.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.classMetrics.AverageOperationComplexityMetric">
    <VALUE measured="pacman.database.LeaderboardDaoTest" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PowerPellet" value="1.0"/>
    <VALUE measured="pacman.logic.level.LevelFactoryTest" value="1.0"/>
    <VALUE measured="pacman.logic.DirectionTest" value="1.0"/>
    <VALUE measured="pacman.logic.level.MapParser" value="4.0"/>
    <VALUE measured="pacman.graphics.gui.LoginController" value="1.0"/>
    <VALUE measured="pacman.logic.level.Square" value="1.7857142857142858"/>
    <VALUE measured="pacman.logic.PlayerTest" value="1.0"/>
    <VALUE measured="pacman.graphics.StatsCanvas" value="1.8"/>
    <VALUE measured="pacman.database.UserDaoTest" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.Sprite" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost.Mode" value="2.0"/>
    <VALUE measured="pacman.logic.entity.GhostTest" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PinkySprite" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.SplashScreenController" value="1.0"/>
    <VALUE measured="pacman.logic.entity.Ghost" value="2.3333333333333335"/>
    <VALUE measured="pacman.graphics.BoardCanvas" value="1.3"/>
    <VALUE measured="pacman.logic.entity.MovingEntity" value="2.0"/>
    <VALUE measured="pacman.logic.entity.BlinkyTest" value="1.0"/>
    <VALUE measured="pacman.database.RegisterDao" value="1.25"/>
    <VALUE measured="pacman.logic.entity.PelletTest" value="2.0"/>
    <VALUE measured="pacman.logic.level.LevelFactory" value="1.75"/>
    <VALUE measured="pacman.logic.level.Level" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite2" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameControllerTest" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.PelletSprite" value="1.0"/>
    <VALUE measured="pacman.Main" value="1.0"/>
    <VALUE measured="pacman.graphics.sprite.GhostSprite" value="1.6666666666666667"/>
    <VALUE measured="pacman.graphics.sprite.PowerPelletSprite" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.ProfileController" value="1.0"/>
    <VALUE measured="pacman.graphics.GameView" value="1.0"/>
    <VALUE measured="pacman.logic.level.BoardTest" value="1.5"/>
    <VALUE measured="pacman.database.LoginDao" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameTest.TestSuite1" value="1.25"/>
    <VALUE measured="pacman.database.DbConnect" value="1.0"/>
    <VALUE measured="pacman.logic.entity.EntityTest" value="1.1428571428571428"/>
    <VALUE measured="pacman.logic.entity.Blinky" value="1.5"/>
    <VALUE measured="pacman.logic.entity.PowerPelletTest" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Pinky" value="1.5"/>
    <VALUE measured="pacman.logic.entity.PinkyTest" value="1.0"/>
    <VALUE measured="pacman.database.LeaderboardDao" value="1.25"/>
    <VALUE measured="pacman.logic.entity.WallTest" value="2.0"/>
    <VALUE measured="pacman.logic.entity.PacMan" value="1.6666666666666667"/>
    <VALUE measured="pacman.logic.entity.Pellet" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.RegisterController" value="2.0"/>
    <VALUE measured="pacman.graphics.Style" value="1.0"/>
    <VALUE measured="pacman.graphics.gui.MenuController" value="2.25"/>
    <VALUE measured="pacman.graphics.gui.LeaderboardController" value="2.0"/>
    <VALUE measured="pacman.logic.entity.Entity" value="1.4210526315789473"/>
    <VALUE measured="pacman.graphics.sprite.PacmanSprite" value="3.5"/>
    <VALUE measured="pacman.database.UserTest" value="1.0"/>
    <VALUE measured="pacman.database.UserDao" value="1.4"/>
    <VALUE measured="pacman.logic.Player" value="1.0"/>
    <VALUE measured="pacman.logic.entity.PacManTest" value="1.6"/>
    <VALUE measured="pacman.graphics.sprite.BlinkySprite" value="1.0"/>
    <VALUE measured="pacman.logic.game.GameController" value="1.375"/>
    <VALUE measured="pacman.logic.entity.Wall" value="1.0"/>
    <VALUE measured="pacman.logic.game.Game" value="1.5"/>
    <VALUE measured="pacman.database.User" value="1.2"/>
    <VALUE measured="pacman.database.RegisterDaoTest" value="1.0"/>
    <VALUE measured="pacman.logic.level.Board" value="1.4444444444444444"/>
    <VALUE measured="pacman.graphics.sprite.WallSprite" value="1.0"/>
    <VALUE measured="pacman.logic.Direction" value="1.3333333333333333"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.TotalCyclomaticComplexityPackageMetric">
    <VALUE measured="pacman.logic.game" value="57.0"/>
    <VALUE measured="pacman.database" value="69.0"/>
    <VALUE measured="pacman.graphics" value="37.0"/>
    <VALUE measured="pacman.logic.level" value="118.0"/>
    <VALUE measured="pacman" value="2.0"/>
    <VALUE measured="pacman.graphics.gui" value="37.0"/>
    <VALUE measured="pacman.logic" value="24.0"/>
    <VALUE measured="pacman.logic.entity" value="170.0"/>
    <VALUE measured="pacman.graphics.sprite" value="22.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.AverageCyclomaticComplexityPackageMetric">
    <VALUE measured="pacman.logic.game" value="1.3255813953488371"/>
    <VALUE measured="pacman.database" value="1.6046511627906976"/>
    <VALUE measured="pacman.graphics" value="1.2758620689655173"/>
    <VALUE measured="pacman.logic.level" value="2.0"/>
    <VALUE measured="pacman" value="1.0"/>
    <VALUE measured="pacman.graphics.gui" value="1.9473684210526316"/>
    <VALUE measured="pacman.logic" value="1.1428571428571428"/>
    <VALUE measured="pacman.logic.entity" value="1.6346153846153846"/>
    <VALUE measured="pacman.graphics.sprite" value="1.4666666666666666"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.moduleMetrics.AverageCyclomaticComplexityModuleMetric">
    <VALUE measured="template.main" value="1.7272727272727273"/>
    <VALUE measured="template.test" value="1.2073170731707317"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.moduleMetrics.TotalCyclomaticComplexityModuleMetric">
    <VALUE measured="template.main" value="437.0"/>
    <VALUE measured="template.test" value="99.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.projectMetrics.AverageCyclomaticComplexityProjectMetric">
    <VALUE measured="project" value="1.6"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.projectMetrics.TotalCyclomaticComplexityProjectMetric">
    <VALUE measured="project" value="536.0"/>
  </METRIC>
</SNAPSHOT>